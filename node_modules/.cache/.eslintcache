[{"/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/index.js":"1","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/app/App.js":"2","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/cervice/Cervice.js":"3","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/header/Header.js":"4","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/listItem/ListItem.js":"5","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/itemInfo/ItemInfo.js":"6","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/itemInfo/searchPanel/SearchPanel.js":"7","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/item/Item.js":"8"},{"size":235,"mtime":1644335051919,"results":"9","hashOfConfig":"10"},{"size":1340,"mtime":1644505771740,"results":"11","hashOfConfig":"10"},{"size":1318,"mtime":1644425786088,"results":"12","hashOfConfig":"10"},{"size":462,"mtime":1644403089730,"results":"13","hashOfConfig":"10"},{"size":1961,"mtime":1644487187330,"results":"14","hashOfConfig":"10"},{"size":2694,"mtime":1644490398729,"results":"15","hashOfConfig":"10"},{"size":558,"mtime":1644508671430,"results":"16","hashOfConfig":"10"},{"size":1067,"mtime":1644437957512,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1p19d5f",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"21"},"/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/index.js",[],[],["48","49"],"/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/app/App.js",["50","51","52","53"],[],"import Cervice from '../cervice/Cervice';\nimport Header from '../header/Header';\nimport './App.css'\nimport logo from '../../images/pokemon-logo.svg'\nimport { Component } from 'react';\nimport ListItem from '../listItem/ListItem';\nimport ItemInfo from '../itemInfo/ItemInfo';\n \n\nlet cervice = new Cervice\n\nclass App extends Component {\nconstructor(props){\n  super(props)\n}\n\nstate = {\n  name: 'BULBASAUR',\n  imgDef: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png',\n  id: 1,\n  description: `Loves to eat`,\n  offset: '0',\n  imgShiny:'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/1.png'\n}\n\ncervice = new Cervice\n\nonClick = (name) => {\n  cervice.getItem(name)\n  .then((item) => {\n    this.setState({\n      name: item.name,\n      imgDef: item.imgDef,\n      imgShiny: item.imgShiny,\n      id: item.id,\n      description: item.description,\n    })\n  }) \n}\n\n\n\n  render() {\n\n    const {id, name, imgDef, imgShiny, description} = this.state\n\n      return (\n        <div className=\"App\">\n          <Header />\n\n          <div className='wrapper'>\n            <ListItem onClick={this.onClick}/>\n            <ItemInfo key = {id} name = {name} imgShiny = {imgShiny} imgDef = {imgDef} description = {description} id = {id}/>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/cervice/Cervice.js",[],[],"/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/header/Header.js",["54"],[],"import { Component } from 'react';\nimport logo from '../../images/pokemon-logo.svg'\nimport './Header.css'\n\nclass Header extends Component {\n    render() {\n        return(\n            <header>\n                <div className='container'>\n                    <ul>\n                        <li>About us</li>\n                    </ul>\n                    </div>    \n                    <img src={logo} />\n            </header>\n        )\n    }\n}\n\nexport default Header\n","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/listItem/ListItem.js",["55","56"],[],"import { Component } from \"react\";\nimport Cervice from \"../cervice/Cervice\";\nimport Item from \"../item/Item\";\nimport './ListItem.css'\n\n\nclass ListItem extends Component {\n    constructor(props){\n        super(props)\n    }\n\n    cervice = new Cervice\n\n    state = {\n        loading: true,\n        items: [],\n        offset: 0,\n    }\n\n    onItemsLoaded = (newItems) => {\n        this.setState(({items, loading}) => ({\n            items: newItems,\n            loading: false,\n        }))\n    }\n\n    onRequest = (offset) => {\n        this.cervice\n        .getAllItems(offset)\n        .then(res => this.onItemsLoaded(res))\n    }\n\n    componentDidMount(){\n        this.onRequest(this.state.offset)\n    }\n\n    createItems = (items) => {\n        const elements = items.map(item => {\n            return <Item key = {item.id} name = {item.name} imgShiny = {item.imgShiny} imgDef = {item.imgDef} onClick={this.props.onClick}/>\n        })\n        return elements\n    }\n\n    onNext = (e) => {\n        e.preventDefault()\n        this.setState(\n            {\n                offset: this.state.offset + 3\n            }, () => this.onRequest(this.state.offset))\n    \n    }\n\n    onPrev = (e) => {\n        e.preventDefault()\n        this.setState(\n            {\n                offset: this.state.offset - 3\n            }, () => this.onRequest(this.state.offset))\n    \n    }\n        \n\n    render() {\n        const {items, loading, offset} = this.state\n        return(\n        <main> \n            <div className=\"container\">\n            {loading? null :  this.createItems(items)}\n            <div className=\"btn-wrapper\">\n                <button className=\"btn\" onClick={(e) => this.onPrev(e)} disabled={offset===0? 'disabled' : null}>Previous</button>\n                <button className=\"btn\" onClick={e => this.onNext(e)} disabled={offset===24? 'disabled' : null}>Next</button>\n            </div>\n            </div>\n\n        </main>    \n        )\n    }\n}\n\n\nexport default ListItem","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/itemInfo/ItemInfo.js",["57","58","59","60"],[],"import { Component } from \"react\";\nimport Cervice from \"../cervice/Cervice\";\nimport Item from \"../item/Item\";\nimport './ItemInfo.css'\nimport SearchPanel from \"./searchPanel/SearchPanel\"\nimport notFound from '../../images/notFound.png'\nimport next from '../../images/next.svg'\nimport back from '../../images/back.svg'\n\n\n\n\nclass ItemInfo extends Component{\n    constructor(props){\n        super(props)\n    }\n\n\n\n    state = {\n        id: this.props.id,\n        name: this.props.name,\n        imgShiny: this.props.imgShiny,\n        imgDef: this.props.imgDef,\n        description: this.props.description,\n    }\n\n    cervice = new Cervice\n\n    onSubmit = (name) => {\n        this.cervice.getItem(name)\n        .then((item) => {\n          this.setState({\n            name: item.name,\n            imgDef: item.imgDef,\n            imgShiny: item.imgShiny,\n            id: item.id,\n            description: item.description,\n          })\n        })\n        .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            name: 'no information',\n            imgDef: notFound,\n            imgShiny: notFound,\n            id: 404,\n            description: 'no information',\n          })\n    }\n\n    onNext = (id) => {\n        id = id + 1\n        this.onSubmit(id)\n    }\n\n    onPrev = (id) => {\n        id = id - 1\n        this.onSubmit(id)\n    }\n\n    onRandom = () => {\n        const id = Math.round(Math.random() * (30 - 1) + 1);\n        this.onSubmit(id)\n    }\n\n    render(){\n\n        // const {img, name, loading} = this.state\n        const {id, name, imgDef, imgShiny, description} = this.state\n        const begin = id === 1? 'disabled' : null\n        const end = id === 30? 'disabled' : null\n\n\n\n        return(\n            <aside className=\"itemInfo\">\n                 <div className=\"container\">\n                    <SearchPanel onSubmit={this.onSubmit}/>\n                    <Item key = {id} name = {name} imgShiny = {imgShiny} imgDef = {imgDef} id = {id}/>\n                    <div className=\"description\">\n                        <h2>{description}</h2>\n                    </div>\n                    <div className=\"btn-wrapper-nav\">\n                        <button className=\"btn\" onClick={() => this.onPrev(id)} disabled={begin}><img src={back} /></button>\n                        <button className=\"btn\" onClick={() => this.onNext(id)} disabled={end}><img src={next} /></button>\n                    </div>\n                    <div className=\"btn-wrapper-random\">\n                        <button className=\"btn\" onClick={this.onRandom}>Random Pokemon</button>\n                    </div>\n                </div>\n             </aside>\n        )\n    }\n}\n\nexport default ItemInfo","/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/itemInfo/searchPanel/SearchPanel.js",["61"],[],"/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/item/Item.js",["62","63"],[],"import { Component } from \"react\";\nimport './Item.css'\n\n\nclass Item extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        img: this.props.imgDef,\n    }\n\n    onClick = () => {\n        this.props.onClick(this.props.name)\n    }\n    \n\n    onMouseOver = () => {\n        this.setState({\n            img: this.props.imgShiny\n\n        })\n    }\n    \n    onMouseLeave = () => {\n        this.setState({\n            img: this.props.imgDef,\n\n        })\n    }\n\n\n    render (){\n        const {name,id} = this.props\n        const {img} = this.state\n        const imgSkeleton = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png'\n        return (\n            <div className=\"item\" onClick={this.onClick} >\n                <img src={img? img: imgSkeleton} style={(id===404)? {'width': '100px', 'display': \"block\", 'margin': '20px auto'}: null} onMouseOver={this.onMouseOver} onMouseLeave={this.onMouseLeave}/>\n                <h2 className=\"name\">{name}</h2>\n            </div>\n        )\n    }\n}\n\nexport default Item",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":10,"column":15,"nodeType":"74","messageId":"75","endLine":10,"endColumn":26,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":13,"column":1,"nodeType":"79","messageId":"80","endLine":15,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":26,"column":11,"nodeType":"74","messageId":"75","endLine":26,"endColumn":22,"fix":"81"},{"ruleId":"82","severity":1,"message":"83","line":14,"column":21,"nodeType":"84","endLine":14,"endColumn":39},{"ruleId":"77","severity":1,"message":"78","line":8,"column":5,"nodeType":"79","messageId":"80","endLine":10,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":12,"column":15,"nodeType":"74","messageId":"75","endLine":12,"endColumn":26,"fix":"85"},{"ruleId":"77","severity":1,"message":"78","line":14,"column":5,"nodeType":"79","messageId":"80","endLine":16,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":28,"column":15,"nodeType":"74","messageId":"75","endLine":28,"endColumn":26,"fix":"86"},{"ruleId":"82","severity":1,"message":"83","line":87,"column":98,"nodeType":"84","endLine":87,"endColumn":116},{"ruleId":"82","severity":1,"message":"83","line":88,"column":96,"nodeType":"84","endLine":88,"endColumn":114},{"ruleId":"77","severity":1,"message":"78","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":8,"endColumn":6},{"ruleId":"77","severity":1,"message":"78","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":8,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":40,"column":17,"nodeType":"84","endLine":40,"endColumn":203},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"89","text":"90"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"91","text":"90"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"92","text":"90"},{"range":"93","text":"90"},"no-global-assign","no-unsafe-negation",[302,302],"()",[672,672],[248,248],[632,632]]