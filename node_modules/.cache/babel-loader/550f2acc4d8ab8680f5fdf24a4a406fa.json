{"ast":null,"code":"class Cervice {\n  constructor() {\n    this.getResource = async url => {\n      let res = await fetch(url);\n      let _adress = `https://pokeapi.co/api/v2/`;\n\n      if (!res.ok) {\n        throw new Error(`status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllItems = async () => {\n      const res = await this.getResource(`https://pokeapi.co/api/v2/pokemon/?limit=4&offset=0/`);\n      const urls = res.results.map(item => item.url);\n      const items = await urls.map(async url => await this.getResource(url));\n      return Promise.all(items);\n    };\n\n    this.transformItem = async item => {\n      let description = await this.getResource();\n      let itemInfo = {\n        name: item.name\n      };\n    };\n  }\n\n}\n\nexport default Cervice;","map":{"version":3,"sources":["/Users/rybina/Desktop/learn-front/learn-react/react-pr/module-2-total/my-app/src/components/cervice/Cervice.js"],"names":["Cervice","getResource","url","res","fetch","_adress","ok","Error","status","json","getAllItems","urls","results","map","item","items","Promise","all","transformItem","description","itemInfo","name"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AAAA;AAAA,SAEVC,WAFU,GAEI,MAAOC,GAAP,IAAe;AACzB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAEF,GAAF,CAArB;AACA,UAAIG,OAAO,GAAI,4BAAf;;AAGA,UAAI,CAACF,GAAG,CAACG,EAAT,EAAY;AACR,cAAM,IAAIC,KAAJ,CAAW,WAAUJ,GAAG,CAACK,MAAO,EAAhC,CAAN;AACH;;AAED,aAAO,MAAML,GAAG,CAACM,IAAJ,EAAb;AACH,KAZS;;AAAA,SAcVC,WAdU,GAcI,YAAY;AACtB,YAAMP,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,sDAAlB,CAAlB;AACA,YAAMU,IAAI,GAAGR,GAAG,CAACS,OAAJ,CAAYC,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACZ,GAA7B,CAAb;AACA,YAAMa,KAAK,GAAG,MAAMJ,IAAI,CAACE,GAAL,CAAS,MAAOX,GAAP,IAAe,MAAM,KAAKD,WAAL,CAAiBC,GAAjB,CAA9B,CAApB;AACA,aAAOc,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAP;AACH,KAnBS;;AAAA,SAqBVG,aArBU,GAqBM,MAAOJ,IAAP,IAAgB;AAC5B,UAAIK,WAAW,GAAG,MAAM,KAAKlB,WAAL,EAAxB;AACA,UAAImB,QAAQ,GAAG;AACfC,QAAAA,IAAI,EAAEP,IAAI,CAACO;AADI,OAAf;AAKH,KA5BS;AAAA;;AAAA;;AAgCd,eAAerB,OAAf","sourcesContent":["class Cervice {\n\n    getResource = async (url) => {\n        let res = await fetch (url)\n        let _adress = `https://pokeapi.co/api/v2/`\n\n\n        if (!res.ok){\n            throw new Error(`status: ${res.status}`)\n        }\n\n        return await res.json()\n    }\n\n    getAllItems = async () => {\n        const res = await this.getResource(`https://pokeapi.co/api/v2/pokemon/?limit=4&offset=0/`)\n        const urls = res.results.map(item => item.url)\n        const items = await urls.map(async (url) => await this.getResource(url))\n        return Promise.all(items)\n    }\n\n    transformItem = async (item) => {\n        let description = await this.getResource()\n        let itemInfo = {\n        name: item.name,\n\n        }\n\n    }\n}\n\n\nexport default Cervice;"]},"metadata":{},"sourceType":"module"}